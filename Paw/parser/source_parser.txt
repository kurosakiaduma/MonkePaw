//All programs start in the global context which does not have a parent
//Contexts can be either custom-named or auto-named using {parent_name}_inner_{no_of_inners+1}
let a=10;
let b=10;
let c,d;
c = "I am a boy";
//d = c+a;
{ // this is global_inner_1
let a = 25;
let c = 15;
let d = 20
};
context mine {
//print(b);
};
// let c=d, d=c; // This should throw en error
{//this is global_inner_2
fn add (a,b){
return c;
};};
//add(10,15); //this throws an error since add is not defined in the global context
// an error should be thrown. This would be a semantic error
//print(e,f);
//g = clock.clock();
//print(g) //failure to close a line without a semicolon results in an error

